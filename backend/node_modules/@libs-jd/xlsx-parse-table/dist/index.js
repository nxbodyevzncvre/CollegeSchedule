"use strict";function n(n){if(!n.length||!n[0].length)return[];const t=function(n){const t=Array(n.length).fill().map((()=>Array(n[0].length).fill(!1))),o=[],r=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];function e(o,e){const l={cells:[],bounds:{minRow:1/0,maxRow:-1/0,minCol:1/0,maxCol:-1/0}},s=[[o,e]];for(;s.length>0;){const[o,e]=s.shift();if(!(o<0||o>=n.length||e<0||e>=n[0].length||t[o][e]||""===n[o][e])){t[o][e]=!0,l.cells.push([o,e]),l.bounds={minRow:Math.min(l.bounds.minRow,o),maxRow:Math.max(l.bounds.maxRow,o),minCol:Math.min(l.bounds.minCol,e),maxCol:Math.max(l.bounds.maxCol,e)};for(const[n,t]of r)s.push([o+n,e+t])}}return l}for(let r=0;r<n.length;r++)for(let l=0;l<n[0].length;l++)if(!t[r][l]&&""!==n[r][l]){const n=e(r,l);o.push(n)}return o}(n);return t.map((t=>function(n,t){const{minRow:o,maxRow:r,minCol:e,maxCol:l}=t.bounds,s=[];for(let t=o;t<=r;t++){const o=[];for(let r=e;r<=l;r++)o.push(n[t][r]);s.push(o)}return s}(n,t)))}function t(n){const t=n.match(/([A-Z]+)(\d+)/);if(!t)return[-1,-1];const[,o,r]=t,e=o.split("").reduce(((n,t)=>26*n+t.charCodeAt(0)-65),0);return[parseInt(r)-1,e]}function o(o){const r=function(n){const o=Object.entries(n).filter((([n])=>n.match(/^[A-Z]+[0-9]+$/))),[r,e]=o.reduce((([n,o],[r])=>{const[e,l]=t(r);return[Math.max(n,e),Math.max(o,l)]}),[-1,-1]),l=Array(r+1).fill().map((()=>Array(e+1).fill("")));return o.forEach((([n,o])=>{const[r,e]=t(n);l[r][e]=o.v||""})),l}(o);return n(r)}var r={parse:n=>o(n)};module.exports=r;
